 # Provision Metallb Load-Balancer 

 ~/c/istio-prep   *…  kubectl get svc -n istio-system istio-ingressgateway -owide
NAME                   TYPE           CLUSTER-IP      EXTERNAL-IP    PORT(S)                                                                      AGE   SELECTOR
istio-ingressgateway   LoadBalancer   10.96.192.173   172.18.255.2   15021:31731/TCP,80:32303/TCP,443:30899/TCP,31400:32381/TCP,15443:30661/TCP   15m   app=istio-ingressgateway,istio=ingressgateway

# Apply GW and VS
# Check Proxy config
# istioctl proxy-config route istio-ingressgateway-5d95b48945-l477x -n istio-system -o json > proxy-config.json

# Curl without passing Host
 ~/c/istio-prep   *…  curl -v 172.18.255.2
*   Trying 172.18.255.2:80...
* TCP_NODELAY set
* Connected to 172.18.255.2 (172.18.255.2) port 80 (#0)
> GET / HTTP/1.1
> Host: 172.18.255.2
> User-Agent: curl/7.68.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 404 Not Found
< date: Thu, 03 Mar 2022 07:22:22 GMT
< server: istio-envoy
< content-length: 0
<
* Connection #0 to host 172.18.255.2 left intact
# Curl with valid host
 ~/c/istio-prep   *…  curl -v -H 'Host:onlineboutique.example.com' 172.18.255.2
*   Trying 172.18.255.2:80...
* TCP_NODELAY set
* Connected to 172.18.255.2 (172.18.255.2) port 80 (#0)
> GET / HTTP/1.1
> Host:onlineboutique.example.com
> User-Agent: curl/7.68.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< set-cookie: shop_session-id=a6ade4be-8a0e-468f-ba63-174600a14d2e; Max-Age=172800
< date: Thu, 03 Mar 2022 07:22:59 GMT
< content-type: text/html; charset=utf-8
< x-envoy-upstream-service-time: 45
< server: istio-envoy
< transfer-encoding: chunked
<
# kubectl apply -f vs-split.yaml
# Proxy config after traffic split
                      "route": {
                            "weightedClusters": {
                                "clusters": [
                                    {
                                        "name": "outbound|80|v1|frontend.default.svc.cluster.local",
                                        "weight": 50
                                    },
                                    {
                                        "name": "outbound|80|v2|frontend.default.svc.cluster.local",
                                        "weight": 50
                                    }
                                ]
                            },

 130  ~/c/istio-prep    curl -vsH "Host:onlineboutique.example.com" http://172.18.255.2 | grep --color=auto -i "free shipping"
*   Trying 172.18.255.2:80...
* TCP_NODELAY set
* Connected to 172.18.255.2 (172.18.255.2) port 80 (#0)
> GET / HTTP/1.1
> Host:onlineboutique.example.com
> User-Agent: curl/7.68.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< set-cookie: shop_session-id=c5d75fb5-58c4-4485-a7c8-2ec419b00092; Max-Age=172800
< date: Thu, 03 Mar 2022 08:33:02 GMT
< content-type: text/html; charset=utf-8
< x-envoy-upstream-service-time: 36
< server: istio-envoy
< transfer-encoding: chunked
<
{ [7968 bytes data]
                <div class="h-free-shipping">Free shipping with $75 purchase! &nbsp;&nbsp;</div>
* Connection #0 to host 172.18.255.2 left intact
 ~/c/istio-prep    curl -vsH "Host:onlineboutique.example.com" http://172.18.255.2 | grep --color=auto -i "free shipping"
*   Trying 172.18.255.2:80...
* TCP_NODELAY set
* Connected to 172.18.255.2 (172.18.255.2) port 80 (#0)
> GET / HTTP/1.1
> Host:onlineboutique.example.com
> User-Agent: curl/7.68.0
> Accept: */*
>
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< set-cookie: shop_session-id=3ad66605-64ef-4e14-b2d0-ba604b5c672e; Max-Age=172800
< date: Thu, 03 Mar 2022 08:33:05 GMT
< content-type: text/html; charset=utf-8
< x-envoy-upstream-service-time: 34
< server: istio-envoy
< transfer-encoding: chunked
<
{ [6978 bytes data]
                <div class="h-free-shipping">Free shipping with $100 purchase! &nbsp;&nbsp;</div>
* Connection #0 to host 172.18.255.2 left intact

"match": {
                            "prefix": "/",
                            "caseSensitive": true,
                            "headers": [
                                {
                                    "name": "user-agent",
                                    "safeRegexMatch": {
                                        "googleRe2": {},
                                        "regex": ".*Firefox.*"
                                    }
                                }
                            ]
                        }


# OpenSSL Commands

# Generate Root CA key and certs
openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 -subj '/O=$DOMAIN_NAME Inc./CN=$DOMAIN_NAME' -keyout $DOMAIN_NAME.key -out $DOMAIN_NAME.crt

# Generate csr and key
openssl req -out onlineboutique.$DOMAIN_NAME.csr -newkey rsa:2048 -nodes -keyout onlineboutique.$DOMAIN_NAME.key -subj "/CN=onlineboutique.$DOMAIN_NAME/O=hello world from $DOMAIN_NAME"

# Sign csr and issue crt
openssl x509 -req -days 365 -CA $DOMAIN_NAME.crt -CAkey $DOMAIN_NAME.key -set_serial 0 -in onlineboutique.$DOMAIN_NAME.csr -out onlineboutique.$DOMAIN_NAME.crt

# Testing
~/c/istio-prep   *  new-certs  curl -vsH "Host:onlineboutique.example.com" --resolve "onlineboutique.example.com:443:$INGRESS_IP" --cacert example.com.crt "https://onlineboutique.exampl
e.com:443" | grep --color=auto -i 'free shipping'
* Added onlineboutique.example.com:443:172.18.255.1 to DNS cache
* Hostname onlineboutique.example.com was found in DNS cache
*   Trying 172.18.255.1:443...
* TCP_NODELAY set
* Connected to onlineboutique.example.com (172.18.255.1) port 443 (#0)
* ALPN, offering h2
* ALPN, offering http/1.1
* successfully set certificate verify locations:
*   CAfile: example.com.crt
  CApath: /etc/ssl/certs
} [5 bytes data]
* TLSv1.3 (OUT), TLS handshake, Client hello (1):
} [512 bytes data]
* TLSv1.3 (IN), TLS handshake, Server hello (2):
{ [122 bytes data]
* TLSv1.3 (IN), TLS handshake, Encrypted Extensions (8):
{ [15 bytes data]
* TLSv1.3 (IN), TLS handshake, Certificate (11):
{ [772 bytes data]
* TLSv1.3 (IN), TLS handshake, CERT verify (15):
{ [264 bytes data]
* TLSv1.3 (IN), TLS handshake, Finished (20):
{ [52 bytes data]
* TLSv1.3 (OUT), TLS change cipher, Change cipher spec (1):
} [1 bytes data]
* TLSv1.3 (OUT), TLS handshake, Finished (20):
} [52 bytes data]
* SSL connection using TLSv1.3 / TLS_AES_256_GCM_SHA384
* ALPN, server accepted to use h2
* Server certificate:
*  subject: CN=onlineboutique.example.com; O=hello world from example.com
*  start date: Mar  7 07:09:05 2022 GMT
*  expire date: Mar  7 07:09:05 2023 GMT
*  common name: onlineboutique.example.com (matched)
*  issuer: O=$DOMAIN_NAME Inc.; CN=$DOMAIN_NAME
*  SSL certificate verify ok.
* Using HTTP2, server supports multi-use
* Connection state changed (HTTP/2 confirmed)
* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0
} [5 bytes data]
* Using Stream ID: 1 (easy handle 0x55db98cdfe30)
} [5 bytes data]
> GET / HTTP/2
> Host:onlineboutique.example.com
> user-agent: curl/7.68.0
> accept: */*
>
{ [5 bytes data]
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
{ [230 bytes data]
* TLSv1.3 (IN), TLS handshake, Newsession Ticket (4):
{ [230 bytes data]
* old SSL session ID is stale, removing
{ [5 bytes data]
* Connection state changed (MAX_CONCURRENT_STREAMS == 2147483647)!
} [5 bytes data]
< HTTP/2 200
< set-cookie: shop_session-id=3ea0ce9d-68ff-4676-b149-918dbf86f983; Max-Age=172800
< date: Mon, 07 Mar 2022 07:27:58 GMT
< content-type: text/html; charset=utf-8
< x-envoy-upstream-service-time: 34
< server: istio-envoy
<
{ [7960 bytes data]
* Connection #0 to host onlineboutique.example.com left intact
                <div class="h-free-shipping">Free shipping with $100 purchase! &nbsp;&nbsp;</div>
